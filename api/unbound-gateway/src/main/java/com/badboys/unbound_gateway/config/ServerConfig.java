package com.badboys.unbound_gateway.config;

import io.netty.handler.codec.http.HttpResponseStatus;
import org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory;
import org.springframework.boot.web.server.WebServerFactoryCustomizer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import reactor.netty.http.server.HttpServer;
import reactor.netty.DisposableServer;

@Configuration
public class ServerConfig {

    @Bean
    public WebServerFactoryCustomizer<NettyReactiveWebServerFactory> httpRedirectCustomizer() {
        return factory -> factory.addServerCustomizers(httpServer -> {
            return httpServer.doOnBind(server -> {
                // üî• 80 Ìè¨Ìä∏Î•º Î¶¨ÎîîÎ†âÌä∏ Ï†ÑÏö©ÏúºÎ°ú ÏÑ§Ï†ï
                DisposableServer disposableServer = HttpServer.create()
                        .port(80)
                        .route(routes -> routes
                                .get("/*", (request, response) -> {
                                    String host = request.requestHeaders().get("Host");
                                    if (host == null) {
                                        host = "freethebeast.duckdns.org";  // Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï (ÌïÑÏöîÏãú Î≥ÄÍ≤Ω)
                                    }

                                    // üî• ÏõêÎ≥∏ ÏöîÏ≤≠ Ìó§Îçî Î≥µÏÇ¨
                                    request.requestHeaders().forEach(entry -> {
                                        response.header(entry.getKey().toString(), entry.getValue().toString());
                                    });

                                    // üî• 307 Î¶¨ÎîîÎ†âÌä∏ Ï†ÅÏö© (POST ‚Üí POST Ïú†ÏßÄ, Ìó§Îçî Ïú†ÏßÄ)
                                    return response.status(HttpResponseStatus.TEMPORARY_REDIRECT)
                                            .header("Location", "https://" + host + request.uri())
                                            .send();
                                })
                        )
                        .bindNow();
            });
        });
    }
}
